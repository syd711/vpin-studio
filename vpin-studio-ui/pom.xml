<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>studio</artifactId>
        <groupId>de.mephisto.vpin</groupId>
        <version>3.12.6</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <artifactId>vpin-studio-ui</artifactId>
    <name>vpin-studio-ui</name>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <junit.version>5.8.2</junit.version>
        <javafx.version>11</javafx.version>
        <skipMacOSBuild>true</skipMacOSBuild>
        <macOSBuild>false</macOSBuild>
    </properties>

    <repositories>
        <repository>
            <id>oss-sonatype</id>
            <name>oss-sonatype</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.commonmark</groupId>
            <artifactId>commonmark</artifactId>
            <version>0.20.0</version>
        </dependency>
        <dependency>
            <groupId>net.sf.sevenzipjbinding</groupId>
            <artifactId>sevenzipjbinding</artifactId>
            <version>16.02-2.01</version>
        </dependency>
        <dependency>
            <groupId>com.github.shayartzi.sevenzipjbinding</groupId>
            <artifactId>sevenzipjbinding-all-platforms</artifactId>
            <version>16.02-2.01</version>
        </dependency>
        <dependency>
            <groupId>net.java.jinput</groupId>
            <artifactId>jinput</artifactId>
            <version>2.0.9</version>
        </dependency>
        <dependency>
            <groupId>net.java.jinput</groupId>
            <artifactId>jinput</artifactId>
            <version>2.0.9</version>
            <classifier>natives-all</classifier>
        </dependency>

        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-javafx</artifactId>
            <version>12.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-simplelineicons-pack</artifactId>
            <version>12.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-bootstrapicons-pack</artifactId>
            <version>12.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-materialdesign2-pack</artifactId>
            <version>12.3.1</version>
        </dependency>

        <dependency>
            <groupId>de.mephisto.vpin</groupId>
            <artifactId>vpin-studio-commons</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>de.mephisto.vpin</groupId>
            <artifactId>vpin-connector-discord</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.reactfx</groupId>
            <artifactId>reactfx</artifactId>
            <version>2.0-M5</version>
        </dependency>
        <dependency>
            <groupId>org.fxmisc.richtext</groupId>
            <artifactId>richtextfx</artifactId>
            <version>0.11.0</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.30</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.9</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>3.1.8</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.9</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.7</version>
        </dependency>
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
            <version>4.7.2</version>
        </dependency>

        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.36.0.3</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${javafx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-media</artifactId>
            <version>${javafx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${javafx.version}</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>11</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>11.1.2</version>
        </dependency>


        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.11.4</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.11.4</version>
        </dependency>

        <dependency>
            <groupId>eu.hansolo</groupId>
            <artifactId>tilesfx</artifactId>
            <version>11.48</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.akathist.maven.plugins.launch4j</groupId>
            <artifactId>launch4j-maven-plugin</artifactId>
            <version>2.2.0</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.2</version>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>de.mephisto.vpin.ui.Launcher</mainClass>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>com.coderplus.maven.plugins</groupId>
                <artifactId>copy-rename-maven-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <id>rename-jar1</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <sourceFile>${basedir}/target/vpin-studio-ui-${project.version}.jar</sourceFile>
                            <destinationFile>${basedir}/target/vpin-studio-ui.jar</destinationFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <executions>
                    <execution>
                        <!-- Default configuration for running with: mvn clean javafx:run -->
                        <id>default-cli</id>
                        <configuration>
                            <mainClass>de.mephisto.vpin.ui.Launcher</mainClass>
                            <launcher>app</launcher>
                            <jlinkZipName>app</jlinkZipName>
                            <jlinkImageName>app</jlinkImageName>
                            <noManPages>true</noManPages>
                            <stripDebug>true</stripDebug>
                            <noHeaderFiles>true</noHeaderFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- This calls launch4j to create the program EXE -->
                <groupId>com.akathist.maven.plugins.launch4j</groupId>
                <artifactId>launch4j-maven-plugin</artifactId>
                <version>2.2.0</version>
                <executions>
                    <execution>
                        <id>l4j-clui</id>
                        <phase>package</phase>
                        <goals>
                            <goal>launch4j</goal>
                        </goals>
                        <configuration>
                            <headerType>gui</headerType>
                            <icon>src/main/resources/de/mephisto/vpin/ui/logo.ico</icon>
                            <outfile>target/VPin-Studio.exe</outfile>
                            <jar>target/vpin-studio-ui.jar</jar>
                            <errTitle>VPin-Studio</errTitle>
                            <classPath>
                                <mainClass>de.mephisto.vpin.ui.Launcher</mainClass>
                                <addDependencies>true</addDependencies>
                                <preCp>anything</preCp>
                            </classPath>
                            <jre>
                                <path>./win32/java</path>
                            </jre>
                            <versionInfo>
                                <fileVersion>1.0.0.0</fileVersion>
                                <txtFileVersion>1.0.0.0</txtFileVersion>
                                <fileDescription>VPin Studio</fileDescription>
                                <copyright>2023 https://github.com/syd711</copyright>
                                <productVersion>1.0.0.0</productVersion>
                                <txtProductVersion>1.0.0.0</txtProductVersion>
                                <productName>VPin Studio</productName>
                                <internalName>VPin-Studio</internalName>
                                <originalFilename>original.exe</originalFilename>
                            </versionInfo>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- This copies the JRE used to do the build from java.home - should be 32 bit Windows JRE -->
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-installation-notes</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/../Output/VPin-Studio/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>./</directory>
                                    <includes>
                                        <include>installation.txt</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>copy-from-jdk-win</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/../Output/VPin-Studio/win32/java</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../java-runtime</directory>
                                    <excludes>
                                        <exclude>**/*.zip</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-from-jdk-linux</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/../Output/VPin-Studio/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../</directory>
                                    <includes>
                                        <include>zulu11.72.19-ca-fx-jre11.0.23-linux_x64.tar.gz</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-from-jdk-osx-arm</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/../Output/VPin-Studio/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../</directory>
                                    <includes>
                                        <include>zulu11.72.19-ca-fx-jre11.0.23-macosx_aarch64.tar.gz</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-exe</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/../Output/VPin-Studio/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/</directory>
                                    <includes>
                                        <include>vpin-studio-ui.jar</include>
                                        <include>VPin-Studio.exe</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>copy-scripts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/../Output/VPin-Studio/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>./</directory>
                                    <includes>
                                        <include>VPin-Studio-linux_x64.sh</include>
                                        <include>VPin-Studio-macosx_aarch64.sh</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>copy-config</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/../Output/VPin-Studio/config/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../config/</directory>
                                    <includes>
                                        <include>*.txt</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <executions>
                    <execution>
                        <id>full-installer-creation</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${macOSBuild}</skip>
                            <executable>ISCC.exe</executable>
                            <arguments>
                                <argument>${basedir}/target/classes/inno-installer-studio-full.iss</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>client-installer-creation</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${macOSBuild}</skip>
                            <executable>ISCC.exe</executable>
                            <arguments>
                                <argument>${basedir}/target/classes/inno-installer-studio-client.iss</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <execution>
                        <id>zip-ui-exe</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${macOSBuild}</skip>

                            <!-- define the command to execute -->
                            <executable>${basedir}/../Output/VPin-Studio/resources/7z.exe</executable>
                            <workingDirectory>${basedir}/../Output/VPin-Studio/</workingDirectory>
                            <arguments>
                                <argument>a</argument>
                                <argument>-tzip</argument>
                                <argument>VPin-Studio.zip</argument>
                                <argument>VPin-Studio.exe</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>zip-ui-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${macOSBuild}</skip>

                            <!-- define the command to execute -->
                            <executable>${basedir}/../Output/VPin-Studio/resources/7z.exe</executable>
                            <workingDirectory>${basedir}/../Output/VPin-Studio/</workingDirectory>
                            <arguments>
                                <argument>a</argument>
                                <argument>-tzip</argument>
                                <argument>vpin-studio-ui-jar.zip</argument>
                                <argument>vpin-studio-ui.jar</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <!--**************************************** OS depending Linux *********************************-->
                    <execution>
                        <id>zip-ui-jar-linux</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${macOSBuild}</skip>

                            <!-- define the command to execute -->
                            <executable>${basedir}/../Output/VPin-Studio/resources/7z.exe</executable>
                            <workingDirectory>${basedir}/../Output/VPin-Studio/</workingDirectory>
                            <arguments>
                                <argument>a</argument>
                                <argument>-tzip</argument>
                                <argument>VPin-Studio-Client-linux-x64.zip</argument>
                                <argument>zulu11.72.19-ca-fx-jre11.0.23-linux_x64.tar.gz</argument>
                                <argument>vpin-studio-ui.jar</argument>
                                <argument>VPin-Studio-linux_x64.sh</argument>
                                <argument>resources/vpsdb.json</argument>
                                <argument>installation.txt</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <!--**************************************** OS depending OSX ***********************************-->
                    <execution>
                        <id>zip-ui-jar-osx-arm</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${macOSBuild}</skip>

                            <!-- define the command to execute -->
                            <executable>${basedir}/../Output/VPin-Studio/resources/7z.exe</executable>
                            <workingDirectory>${basedir}/../Output/VPin-Studio/</workingDirectory>
                            <arguments>
                                <argument>a</argument>
                                <argument>-tzip</argument>
                                <argument>VPin-Studio-Client-macosx_aarch64.zip</argument>
                                <argument>zulu11.72.19-ca-fx-jre11.0.23-macosx_aarch64.tar.gz</argument>
                                <argument>vpin-studio-ui.jar</argument>
                                <argument>VPin-Studio-macosx_aarch64.sh</argument>
                                <argument>resources/vpsdb.json</argument>
                                <argument>installation.txt</argument>
                            </arguments>
                        </configuration>
                    </execution>
                     <!--**************************************** OS depending MacOS App Bundle ***********************************-->
                     <!--NEED TO ADD ICONS THIS IS JUST THE JRE AND JAR-->
                   	<execution>
                        <id>unpack-targz-from-jdk-osx-arm</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                         <configuration>
                            <skip>${skipMacOSBuild}</skip>
                            <!-- define the command to execute -->
                            <executable>tar</executable>
                            <workingDirectory>${basedir}/../Output/VPin-Studio/</workingDirectory>
                            <arguments>
                                <argument>xvf</argument>
                                <argument>zulu11.72.19-ca-fx-jre11.0.23-macosx_aarch64.tar.gz</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- This copies the JRE used to do the build from java.home - should be 32 bit Windows JRE -->
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-jre</id>
                        <!-- Copy JRE to runtime dir -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <skip>${skipMacOSBuild}</skip>
                            <outputDirectory>${basedir}/../Output/VPin-Studio.app/Contents/runtime/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../Output/VPin-Studio/zulu11.72.19-ca-fx-jre11.0.23-macosx_aarch64/zulu-11.jre/</directory>
                                    <includes>
                                        <include>Contents</include>
                                     </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-Macjar</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <skip>${skipMacOSBuild}</skip>
                            <outputDirectory>${basedir}/../Output/VPin-Studio.app/Contents/app</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/</directory>
                                    <includes>
                                        <include>vpin-studio-ui.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--End MacOS Stuff-->

            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <executions>
                    <execution>
                        <id>zip-server-exe</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${macOSBuild}</skip>
                            <!-- define the command to execute -->
                            <executable>${basedir}/../Output/VPin-Studio/resources/7z.exe</executable>
                            <workingDirectory>${basedir}/../Output/VPin-Studio/</workingDirectory>
                            <arguments>
                                <argument>a</argument>
                                <argument>-tzip</argument>
                                <argument>VPin-Studio-Server.zip</argument>
                                <argument>VPin-Studio-Server.exe</argument>
                                <argument>VPin-Studio-App.exe</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>


    </build>
</project>